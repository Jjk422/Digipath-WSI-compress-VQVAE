#!/bin/bash

# Generic options:

#SBATCH --account=bdlds05    # Run job under project <project>
#SBATCH --time=48:0:0         # Run for a max of 1 hour

# Node resources:
# (choose between 1-4 gpus per node)

#SBATCH --partition=gpu    # Choose either "gpu" or "infer" node type
#SBATCH --nodes=1          # Resources from a single node
#SBATCH --gres=gpu:1       # One GPU per node (plus 25% of node CPU and RAM per GPU)

# Run commands:
# Create environment (based on https://bede-documentation.readthedocs.io/en/latest/software/index.html#pytorch-quickstart)
export MY_ROOT=/nobackup/projects/bdlds05/jasonk
export ENV_DIR=$MY_ROOT/env

#rm -rf ~/.conda .condarc $ENV_DIR/miniconda # Uncomment if you want to remove old env
#rm -rf $ENV_DIR
#mkdir $ENV_DIR

#pushd $ENV_DIR

#rm Miniconda3-latest-Linux-ppc64le.sh
#wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-ppc64le.sh
#sh Miniconda3-latest-Linux-ppc64le.sh -b -p $ENV_DIR/miniconda
# source $ENV_DIR/miniconda/bin/activate
#conda update conda -y 
#conda config --set channel_priority strict
#conda config --prepend channels https://public.dhe.ibm.com/ibmdl/export/pub/software/server/ibm-ai/conda/
#conda config --prepend channels https://opence.mit.edu
#conda create --name train-cnn-env python=3.9 pytorch setuptools pandas numpy scikit-learn matplotlib -y
## source activate train-cnn-env

conda activate bede_new_PhD_test_environment

#conda install torchvision
#pip install tensorboard
#pip install tqdm

#popd
nvidia-smi  # Display available gpu resources

# Project variables:
PROJECT_ROOT=$MY_ROOT/JPEG_VQVAE_histopathology_compression
# SCRIPT_PATH=$PROJECT_ROOT/VQVAE_compression_ratio_train_script.py
SCRIPT_PATH=$PROJECT_ROOT/VQVAE_compression_ratio_train_script_2022_03_29_6and8_embedding_dimensions_continue_training.py
echo "training starting"
python3 "$SCRIPT_PATH"
